{"version":3,"sources":["approve.js"],"names":["global","factory","exports","module","require","define","amd","approve","ob","this","isFunction","functionToCheck","getType","toString","call","Card","scheme","valid","Score","strength","points","isMinimum","hasLower","hasUpper","hasNumber","hasSpecial","isBonus","percent","errors","en","TESTS","REQUIRED","EMAIL","URL","ALPHANUMERIC","NUMERIC","ALPHA","DECIMAL","CURRENCY","IP","MIN","MAX","RANGE","EQUAL","FORMAT","TIME","DATE","TRUTHY","FALSY","CC","MESSAGE","STR","IS_MINIMUM","HAS_LOWER","HAS_UPPER","HAS_NUMBER","HAS_SPECIAL","ru","result","retriever","path","str","get","locale","setLocale","newLocale","getLocale","i18n","r$1","cc","message","schemes","regex","_getScheme","value","replace","i","length","test","validate","ca","card","sum","mul","charAt","r$2","minimum","minimumBonus","strengths","0","1","2","3","4","5","6","expects","_getScore","text","match","Math","ceil","_getStrength","push","pars","min","bonus","hasOwnProperty","config","messages","r","tests","required","email","url","alphaNumeric","numeric","alpha","decimal","currency","ip","ipv4","ipv4Cidr","ipv6","ipv6Cidr","max","range","equal","format","Object","prototype","time","date","formats","ymd","dmy","truthy","falsy","Result","approved","failed","each","callback","isFunc","constructor","apply","filter","_format","col","Array","slice","arguments","m","n","trim","_isRule","rule","props","indexOf","_start","rules","title","stop","ignoreNull","constraint","params","_test","args","_getArgs","ret","_formatMessages","concat","prop","_formatMessage","_eachExpected","fn","isArray","expectsLength","_getFormat","addTest","obj","name","e"],"mappings":"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","file":"approve.min.js","sourcesContent":["(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('object-path')) :\n   typeof define === 'function' && define.amd ? define(['object-path'], factory) :\n   (global.approve = factory(global.ob));\n}(this, (function (ob) { 'use strict';\n\nob = 'default' in ob ? ob['default'] : ob;\n\nvar en = {\r\n    'TESTS':{\r\n        'REQUIRED': '{title} is required',\r\n        'EMAIL': '{title} must be a valid email address',\r\n        'URL': '{title} must be a valid web address',\r\n        'ALPHANUMERIC': '{title} may only contain [A-Za-z] and [0-9]',\r\n        'NUMERIC': '{title} may only contain [0-9]',\r\n        'ALPHA': '{title} may only contain [A-Za-z]',\r\n        'DECIMAL': '{title} must be a valid decimal',\r\n        'CURRENCY': '{title} must be a valid currency value', \r\n        'IP': '{title} must be a valid IP address',\r\n        'MIN': '{title} must be a minimum of {min} characters',\r\n        'MAX': '{title} must be a maximum of {max} characters',\r\n        'RANGE': '{title} must be a minimum of {min} and a maximum of {max} characters',\r\n        'EQUAL': '{title} must be equal to {field}',\r\n        'FORMAT': '{title} did not pass the [{regex}] test',\r\n        'TIME': '{title} is not a valid time',\r\n        'DATE': '{title} is not a valid date',\r\n        'TRUTHY': '{title} is not valid',\r\n        'FALSY': '{title} is not valid'\r\n    },\r\n    'CC':{\r\n        'MESSAGE':'{title} is not a valid credit card number'\r\n    },\r\n    'STR':{\r\n        'MESSAGE': '{title} did not pass the strength test.',\r\n        'IS_MINIMUM': '{title} must be at least {min} characters',\r\n        'HAS_LOWER': '{title} must have at least 1 lower case character',\r\n        'HAS_UPPER': '{title} must have at least 1 upper case character',\r\n        'HAS_NUMBER': '{title} must have at least 1 number',\r\n        'HAS_SPECIAL': '{title} must have at least 1 special character',\r\n    }\r\n};\n\nvar ru = {\r\n    'TESTS':{\r\n        'REQUIRED': '{title} поле, обязательно',\r\n        'EMAIL': '{title} должно быть действующим адресом электронной почты',\r\n        'URL': '{title} должно быть действительным адресом веб сайта',\r\n        'ALPHANUMERIC': '{title} может содержать [A-Za-z] и [0-9]',\r\n        'NUMERIC': '{title} может содержать [0-9]',\r\n        'ALPHA': '{title} может содержать [A-Za-z]',\r\n        'DECIMAL': '{title} должно быть десятичным',\r\n        'CURRENCY': '{title} должно быть валютой', \r\n        'IP': '{title} должно быть корректным IP адресом',\r\n        'MIN': '{title} должно быть минимум {min} знаков',\r\n        'MAX': '{title} должно быть максимум {max} знаков',\r\n        'RANGE': '{title} должно быть минимум {min} и максимум {max} знаков',\r\n        'EQUAL': '{title} должно быть равно полю {field}',\r\n        'FORMAT': '{title} не соответствут формату [{regex}]',\r\n        'TIME': '{title} не корректное время',\r\n        'DATE': '{title} не корректная дата',\r\n        'TRUTHY': '{title} не корректно',\r\n        'FALSY': '{title} не корректно'\r\n    },\r\n    'CC':{\r\n        'MESSAGE':'{title} не корректный номер кредитной карты'\r\n    },\r\n    'STR':{\r\n        'MESSAGE': '{title} не пройден тест на сложность!',\r\n        'IS_MINIMUM': '{title} должно быть минимум {min} знаков',\r\n        'HAS_LOWER': '{title} должно быть минимум 1 знак нижнего регистра',\r\n        'HAS_UPPER': '{title} должно быть минимум 1 знак верхнего регистра',\r\n        'HAS_NUMBER': '{title} должно быть минимум 1 цифра',\r\n        'HAS_SPECIAL': '{title} должно быть минимум 1 спец. символ',\r\n    }\r\n};\n\n/**\r\n * add more locales here\r\n */\r\n/**\r\n * and there\r\n */\r\nvar result = {\r\n    en: en,\r\n    ru: ru\r\n};\r\n\r\nvar retriever = function (path) {\r\n    var str = ob.get(result[locale], path);\r\n    return str;\r\n};\r\nvar locale = 'en';\r\n\r\nvar setLocale = function (newLocale) {\r\n    locale = newLocale;\r\n};\r\n\r\nvar getLocale = function() {\r\n    return locale;\r\n};\r\n\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\r\n   }\r\n\r\nvar i18n = { \r\n    retriever: retriever,\r\n    getLocale: getLocale,\r\n    setLocale: setLocale,\r\n    isFunction: isFunction \r\n};\n\nvar r$1 = i18n.retriever;\r\n/**\r\n * The result object containing the outcome of the credit card test.\r\n */\r\nfunction Card() {\r\n    this.scheme = '';\r\n    this.valid = false;\r\n}\r\n\r\n/** \r\n * Checks if a value is a valid credit card.\r\n */\r\nvar cc = {\r\n    /**\r\n     * The default error message.\r\n     */\r\n    message: function() { return r$1('CC.MESSAGE')},\r\n    schemes: [\r\n        {\r\n            regex: /^(5610|560221|560222|560223|560224|560225)/,\r\n            scheme: 'Australian Bank Card'\r\n        },\r\n        {\r\n            regex: /^(2014|2149)/,\r\n            scheme: 'Diner\\'s Club'\r\n        },\r\n        {\r\n            regex: /^36/,\r\n            scheme: 'Diner\\'s Club International'\r\n        },\r\n        {\r\n            regex: /^(30[0-5]|36|38|54|55|2014|2149)/,\r\n            scheme: 'Diner\\'s Club / Carte Blanche'\r\n        },\r\n        {\r\n            regex: /^35(2[89]|[3-8][0-9])/,\r\n            scheme: 'Japanese Credit Bureau'\r\n        },\r\n        {\r\n            regex: /^(5018|5020|5038|6304|6759|676[1-3])/,\r\n            scheme: 'Maestro'\r\n        },\r\n        {\r\n            regex: /^5[1-5]/,\r\n            scheme: 'Mastercard'\r\n        },\r\n        {\r\n            regex: /^(6304|670[69]|6771)/,\r\n            scheme: 'Laser'\r\n        },\r\n        {\r\n            regex: /^(6334|6767)/,\r\n            scheme: 'Solo (Paymentech)'\r\n        },\r\n        {\r\n            regex: /^(6011|622|64|65)/,\r\n            scheme: 'Discover'\r\n        },\r\n        {\r\n            regex: /^3[47]/,\r\n            scheme: 'American Express'\r\n        },\r\n        {\r\n            regex: /^(4026|417500|4508|4844|491(3|7))/,\r\n            scheme: 'Visa Electron'\r\n        },\r\n        {\r\n            regex: /^(4)/,\r\n            scheme: 'Visa'\r\n        }\r\n    ],\r\n    /**\r\n     * Returns the name of the credit card scheme.\r\n     * @param {Object} value - The credit card number to test.\r\n     * @return {Object} The result of the test.\r\n     */\r\n    _getScheme: function(value) {\r\n        value = (''+ value).replace(/\\D/g, '');\r\n\r\n        var i = this.schemes.length;\r\n        while (i--) {\r\n            if (this.schemes[i].regex.test(value)) {\r\n                return this.schemes[i].scheme;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    },\r\n    /**\r\n     * The method that is called by ApproveJs to perform the test.\r\n     * @param {Object} value - The value to test.\r\n     * @return {Object} The result object of the test.\r\n     */\r\n    validate: function(value) {\r\n        value = (''+ value).replace(/\\D/g, '');\r\n\r\n        var card = new Card(), \r\n            i = value.length,\r\n            sum = 0,\r\n            mul = 1,\r\n            ca;\r\n\r\n        // Not enough numbers. Shortest currently is 12. \r\n        if (i < 12) {\r\n            return false;\r\n        }\r\n\r\n        while (i--) {\r\n            ca = value.charAt(i) * mul;\r\n            sum += ca - (ca > 9) * 9;\r\n            mul ^= 3;\r\n        }\r\n\r\n        card.valid = (sum % 10 === 0) && (sum > 0);\r\n        card.scheme = this._getScheme(value);\r\n\r\n        return card;\r\n    }\r\n};\n\nvar r$2 = i18n.retriever;\r\n/**\r\n * The result object containing the outcome of the strength test.\r\n */\r\nfunction Score(strength) {\r\n    this.strength = strength;\r\n    this.points = 0;\r\n    this.isMinimum = false;\r\n    this.hasLower = false;\r\n    this.hasUpper = false;\r\n    this.hasNumber = false;\r\n    this.hasSpecial = false;\r\n    this.isBonus = false;\r\n    this.percent = 0;\r\n    this.valid = false;\r\n    this.errors = [];\r\n}\r\n/** \r\n * Checks if a value is a strong password string.\r\n */\r\nvar strength = {\r\n    /**\r\n     * The minimum length a password must be.\r\n     */\r\n    minimum: 8,\r\n    /**\r\n     * The minimum length a password must be for a bonus point.\r\n     */\r\n    minimumBonus: 10,\r\n    /**\r\n     * The text representing the strength of a password.\r\n     */\r\n    strengths: {\r\n        0: 'Very Weak',\r\n        1: 'Weak',\r\n        2: 'Better',\r\n        3: 'Almost',\r\n        4: 'Acceptable',\r\n        5: 'Strong',\r\n        6: 'Very Strong'\r\n    },\r\n    /**\r\n     * The default error message.\r\n     */\r\n    message: function() { return r$2('STR.MESSAGE')},\r\n    /**\r\n     * Expects the 'min' and 'bonus' parameters.\r\n     */\r\n    expects: ['min', 'bonus'],\r\n    /**\r\n     * Default error messages\r\n     */\r\n    errors: {\r\n        isMinimum: function() { return r$2('STR.IS_MINIMUM')},\r\n        hasLower: function() { return r$2('STR.HAS_LOWER')},\r\n        hasUpper: function() { return r$2('STR.HAS_UPPER')},\r\n        hasNumber: function() { return r$2('STR.HAS_NUMBER')},\r\n        hasSpecial: function() { return r$2('STR.HAS_SPECIAL')} \r\n    },\r\n    /**\r\n     * Returns an object containing the score of a value.\r\n     */\r\n    _getScore: function(text) {\r\n        // Create the object that represents the score of the text\r\n        var result = new Score(this.strengths[0]);\r\n        // If text is longer than minimum give 1 point.\r\n        // If text is longer than minimumBonus give another 1 point.\r\n        if (text.length > this.minimumBonus) {\r\n            result.points += 2;\r\n            result.isBonus = true;\r\n            result.isMinimum = true;\r\n        } else if (text.length > this.minimum){\r\n            result.points++;\r\n            result.isMinimum = true;\r\n        } else {\r\n            result.points = 1;\r\n            result.isMinimum = false;\r\n        }\r\n        // If text has lowercase characters give 1 point.\r\n        result.hasLower = text.match(/[a-z]/) === null ? false : true;\r\n        if(result.isMinimum && result.hasLower) {\r\n            result.points++;\r\n        }\r\n        // If text has uppercase characters give 1 point.\r\n        result.hasUpper = text.match(/[A-Z]/) === null ? false : true;\r\n        if(result.isMinimum && result.hasUpper) {\r\n            result.points++;\r\n        }\r\n        // If text has at least one number give 1 point.\r\n        result.hasNumber = text.match(/\\d+/) === null ? false : true;\r\n        if(result.isMinimum && result.hasNumber) {\r\n            result.points++;\r\n        }\r\n        // If text has at least one special caracther give 1 point.\r\n        result.hasSpecial = text.match(/.[!,@,#,$,%,^,&,*,?,_,~,-,(,)]/) === null ? false : true;\r\n        if(result.isMinimum && result.hasSpecial) {\r\n            result.points++;\r\n        }\r\n        // Set the percentage value.\r\n        result.percent = Math.ceil((result.points / 6) * 100);\r\n        // Return the score object.\r\n        return result;\r\n    },\r\n    /**\r\n     * Returns an object containing the score and validation of a value.\r\n     */\r\n    _getStrength: function (text) {\r\n        var result = this._getScore(text);\r\n        result.strength = this.strengths[result.points];\r\n        if (!result.isMinimum) {\r\n            if (i18n.isFunction(this.errors.isMinimum))\r\n                result.errors.push(this.errors.isMinimum());\r\n            else \r\n                result.errors.push(this.errors.isMinimum);\r\n        }\r\n        if (!result.hasLower) {\r\n            if (i18n.isFunction(this.errors.hasLower))\r\n                result.errors.push(this.errors.hasLower());\r\n            else \r\n                result.errors.push(this.errors.hasLower);\r\n        }\r\n        if (!result.hasUpper) {\r\n            if (i18n.isFunction(this.errors.hasUpper))\r\n                result.errors.push(this.errors.hasUpper());\r\n            else \r\n                result.errors.push(this.errors.hasUpper);\r\n        }   \r\n        if (!result.hasSpecial) {\r\n            if (i18n.isFunction(this.errors.hasSpecial))\r\n                result.errors.push(this.errors.hasSpecial());\r\n            else \r\n                result.errors.push(this.errors.hasSpecial);\r\n        }\r\n        if (!result.hasNumber) {\r\n            if (i18n.isFunction(this.errors.hasNumber))\r\n                result.errors.push(this.errors.hasNumber());\r\n            else\r\n                result.errors.push(this.errors.hasNumber);\r\n        }\r\n        if (result.points > 4) {\r\n          result.valid = true;\r\n        } \r\n        return result;\r\n    },\r\n    /**\r\n     * The method that is called by ApproveJs to perform the test.\r\n     */\r\n    validate: function(value, pars) {\r\n        this.minimum = pars.min || this.minimum;\r\n        this.minimumBonus = pars.bonus || this.minimumBonus;\r\n        if (pars.hasOwnProperty('config') && pars.config.hasOwnProperty('messages')) {\r\n            for (var message in pars.config.messages) {\r\n                if (pars.config.messages.hasOwnProperty(message)) {\r\n                    this.errors[message] = pars.config.messages[message];\r\n                }\r\n            }\r\n        }\r\n        return this._getStrength(value);\r\n    }\r\n};\n\nvar r = i18n.retriever;\r\n\r\nvar tests = {\r\n    /**\r\n     * Checks if a value is present.\r\n     */\r\n    required: {\r\n        validate: function(value) {\r\n            return !!value;\r\n        },\r\n        message: function() { return r('TESTS.REQUIRED')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Checks if a value is a valid email address.\r\n     */\r\n    email: {\r\n        regex: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i, // eslint-disable-line no-control-regex\r\n        validate: function(value) {\r\n            return this.regex.test(value);\r\n        },\r\n        message: function() { return r('TESTS.EMAIL')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Checks if a value is a valid web address.\r\n     */\r\n    url: {\r\n        regex: /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/i,\r\n        validate: function(value) {\r\n            return this.regex.test(value);\r\n        },\r\n        message: function() { return r('TESTS.URL')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Checks if a value contains both letters and numbers.\r\n     */\r\n    alphaNumeric: {\r\n        regex: /^[A-Za-z0-9]+$/i,\r\n        validate: function(value) {\r\n            return this.regex.test(value);\r\n        },\r\n        message: function() { return r('TESTS.ALPHANUMERIC')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Checks if a value contains only numbers.\r\n     */\r\n    numeric: {\r\n        regex: /^-?[0-9]+$/,\r\n        validate: function(value) {\r\n            return this.regex.test(value);\r\n        },\r\n        message: function() { return r('TESTS.NUMERIC')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Checks if a value contains only letters.\r\n     */\r\n    alpha: {\r\n        regex: /^[A-Za-z]+$/,\r\n        validate: function(value) {\r\n            return this.regex.test(value);\r\n        },\r\n        message: function() { return r('TESTS.ALPHA')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Checks if a value is a valid decimal.\r\n     */\r\n    decimal: {\r\n        regex: /^\\s*(\\+|-)?((\\d+(\\.\\d+)?)|(\\.\\d+))\\s*$/,\r\n        validate: function(value) {\r\n            return this.regex.test(value);\r\n        },\r\n        message: function() { return r('TESTS.DECIMAL')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Similar to 'decimal', but for currency values.\r\n     */\r\n    currency: {\r\n        regex: /^\\s*(\\+|-)?((\\d+(\\.\\d\\d)?)|(\\.\\d\\d))\\s*$/,\r\n        validate: function(value) {\r\n            return this.regex.test(value);\r\n        },\r\n        message: function() { return r('TESTS.CURRENCY')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Checks if a value is a valid ipv4 or ipv6 address.\r\n     */\r\n    ip: {\r\n        regex: {\r\n            ipv4: /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/,\r\n            ipv4Cidr: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$/,\r\n            ipv6: /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i,\r\n            ipv6Cidr: /^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$/\r\n        },\r\n        validate: function(value) {\r\n            return this.regex.ipv4.test(value) || this.regex.ipv6.test(value) || this.regex.ipv4Cidr.test(value) || this.regex.ipv6Cidr.test(value);\r\n        },\r\n        message: function() { return r('TESTS.IP')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Checks if a value is a minimum of n characters.\r\n     */\r\n    min: {\r\n        validate: function(value, pars) {\r\n            return typeof value === 'string' && value.length >= pars.min;\r\n        },\r\n        message: function() { return r('TESTS.MIN')},\r\n        expects: ['min']\r\n    },\r\n    /**\r\n     * Checks if a value is a maximum of n characters.\r\n     */\r\n    max: {\r\n        validate: function(value, pars) {\r\n            return typeof value === 'string' && value.length <= pars.max;\r\n        },\r\n        message: function() { return r('TESTS.MAX')},\r\n        expects: ['max']\r\n    },\r\n    /**\r\n     * Checks if a string's length or number is between a minimum and maximum.\r\n     */\r\n    range: {\r\n        validate: function(value, pars) {\r\n            if (typeof value === 'string')\r\n            {\r\n                return value.length >= pars.min && value.length <= pars.max;\r\n            } else if (typeof value === 'number') {\r\n                return value >= pars.min && value <= pars.max;\r\n            }\r\n            return false;\r\n        },\r\n        message: function() { return r('TESTS.RANGE')},\r\n        expects: ['min', 'max']\r\n    },\r\n    /**\r\n     * Checks if a value is the same as the value of another.\r\n     */\r\n    equal: {\r\n        validate: function(value, pars) {\r\n            return '' + value === '' + pars.value;\r\n        },\r\n        message: function() { return r('TESTS.EQUAL')},\r\n        expects: ['value', 'field']\r\n    },\r\n    /**\r\n     * Checks if a value passes a given regular expression.\r\n     */\r\n    format: {\r\n        validate: function(value, pars) {\r\n            if (Object.prototype.toString.call(pars.regex) === '[object RegExp]') {\r\n                return pars.regex.test(value);\r\n            }\r\n            throw 'approve.value(): [format] - regex is not a valid regular expression.';\r\n        },\r\n        message: function() { return r('TESTS.FORMAT')},\r\n        expects: ['regex']\r\n    },\r\n    /**\r\n     * Checks if a value is a valid time string (hh:mm:ss).\r\n     */\r\n    time: {\r\n        regex: /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/,\r\n        validate: function(value) {\r\n            return this.regex.test(value);\r\n        },\r\n        message: function() { return r('TESTS.TIME')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Checks if a value is a valid date.\r\n     */\r\n    date: {\r\n        formats: {\r\n            ymd: /^(?:\\2)(?:[0-9]{2})?[0-9]{2}([\\/-])(1[0-2]|0?[1-9])([\\/-])(3[01]|[12][0-9]|0?[1-9])$/,\r\n            dmy: /^(3[01]|[12][0-9]|0?[1-9])([\\/-])(1[0-2]|0?[1-9])([\\/-])(?:[0-9]{2})?[0-9]{2}$/\r\n        },\r\n        validate: function(value, pars) {\r\n            return this.formats[pars.format].test(value);\r\n        },\r\n        message: function() { return r('TESTS.DATE')},\r\n        expects: ['format']\r\n    },\r\n    /**\r\n     * Checks if a value is truthy ('yes', 'true', 'ok[ay]', '1').\r\n     */\r\n    truthy: {\r\n        regex: /^(?:1|t(?:rue)?|y(?:es)?|ok(?:ay)?)$/i,\r\n        validate: function(value) {\r\n            return this.regex.test(value);\r\n        },\r\n        message: function() { return r('TESTS.TRUTHY')},\r\n        expects: false\r\n    },\r\n    /**\r\n     * Checks if a value is falsy ('No', 'false', '0').\r\n     */\r\n    falsy: {\r\n        regex: /^(?:1|t(?:rue)?|y(?:es)?|ok(?:ay)?)$/i,\r\n        validate: function(value) {\r\n            return !this.regex.test(value);\r\n        },\r\n        message: function() { return r('TESTS.FALSY')},\r\n        expects: false\r\n    },\r\n    cc: cc,\r\n    strength: strength\r\n};\n\nvar Result = function() {\r\n    this.approved = true;\r\n    this.errors = [];\r\n    this.failed = [];\r\n    // Provides easy access to the loop for the errors.\r\n    this.each = function(callback) {\r\n        var isFunc = callback && callback.constructor && callback.call && callback.apply,\r\n            i = this.errors.length;\r\n        while (i--) {\r\n            if (isFunc) {\r\n                callback(this.errors[i]);\r\n            }\r\n        }\r\n    };\r\n    // Provides easy access to the loop for a test's errors.\r\n    this.filter = function(test, callback) {\r\n    \tvar isFunc = callback && callback.constructor && callback.call && callback.apply,\r\n    \t\ti = 0;\r\n    \tif (this.hasOwnProperty(test)) {\r\n    \t\ti = this[test].errors.length;\r\n    \t\twhile (i--) {\r\n\t            if (isFunc) {\r\n\t                callback(this[test].errors[i]);\r\n\t            }\r\n\t        }\r\n    \t}\r\n    };\r\n};\r\n\r\n/** @constructor */\r\nvar approve = {\r\n\t/**\r\n\t * Default tests.<br>\r\n\t */\r\n\ttests: tests,\r\n\t/**\r\n\t * A helper function for formatting strings.\r\n\t */\r\n\t_format: function(text, col) {\r\n\t\tcol = typeof col === 'object' ? col : Array.prototype.slice.call(arguments, 1);\r\n\t    return text.replace(/\\{\\{|\\}\\}|\\{(\\w+)\\}/g, function (m, n) {\r\n\t        if (m === \"{{\") { return \"{\"; }\r\n\t        if (m === \"}}\") { return \"}\"; }\r\n\t        return col[n];\r\n\t    }).trim();\r\n\t},\r\n\t/**\r\n\t * Checks whether the given rule is not a config property.\r\n\t */\r\n\t_isRule: function(rule) {\r\n\t\tvar props = [\r\n\t\t\t'title',\r\n\t\t\t'stop',\r\n\t\t\t'ignoreNull'\r\n\t\t];\r\n\t\treturn props.indexOf(rule) < 0;\r\n\t},\r\n\t/**\r\n\t * The start of the validation process.\r\n\t */\r\n\t_start: function(value, rules) {\r\n\t    // Instantiate a result object.\r\n\t    var result = new Result(),\r\n\t        // This is used to format the message with the value title.\r\n\t        title = '',\r\n\t        // When true, tests will not continue after first failed test.\r\n\t        stop = false,\r\n\t        // When true, tests will not be executed if the value is null.\r\n\t        ignoreNull = false;\r\n\t    // Check if the rule has a title property?\r\n\t    if (rules.hasOwnProperty('title')) {\r\n\t        title = rules.title;\r\n\t    }\r\n\t    // Check if the rule has a stop property?\r\n\t    if (rules.hasOwnProperty('stop')) {\r\n\t        stop = rules.stop;\r\n\t    }\r\n\t    // Check if the rule has an ignoreNull property?\r\n\t    if (rules.hasOwnProperty('ignoreNull')) {\r\n\t        ignoreNull = rules.ignoreNull;\r\n\t    }\r\n\t    // Loop through given rules.\r\n\t    for (var rule in rules) {\r\n\t    \t// Stop validating after each failed test\r\n\t    \tif (stop && !result.approved) {\r\n\t    \t\tbreak;\r\n\t    \t}\r\n\t        if (rules.hasOwnProperty(rule) && this._isRule(rule)) {\r\n\t            var constraint = rules[rule];\r\n\t            // Check if rule exists in tests.\r\n\t            if (this.tests.hasOwnProperty(rule)) {\r\n\t                // Set a pointer to the current test.\r\n\t                var params = {\r\n\t                    constraint: constraint,\r\n\t                    rule: rule,\r\n\t                    title: title,\r\n\t                    test: this.tests[rule],\r\n\t                    value: value,\r\n\t                    ignoreNull: ignoreNull\r\n\t                };\r\n\t                this._test(params, result);\r\n\t            } else {\r\n\t                throw 'approve.value(): ' + rule + ' test not defined.';\r\n\t            }\r\n\t        }\r\n\t    }\r\n\r\n\t    return result;\r\n\t},\r\n\t/**\r\n\t * Performs the actual testing of the value and returns the result including any errors.\r\n\t */\r\n\t_test: function(params, result) {\r\n\t\t// Check if nulls should be ignored\r\n\t\tif (params.hasOwnProperty('ignoreNull')) {\r\n\t\t\tif (!params.value && params.ignoreNull) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t    // Create an args object for required parameters.\r\n\t    var args = this._getArgs(params),\r\n\t        // Test the value.\r\n\t        ret = params.test.validate(params.value, args);\r\n\r\n\t    result[params.rule] = {\r\n\t    \tapproved: true,\r\n\t    \terrors: []\r\n\t    };\r\n\t    // Check if the returned value is an object.\r\n\t    if(typeof ret === 'object')\r\n\t    {\r\n\t        // An object was returned.\r\n\t        // Check if the test was successful.\r\n\t        result.approved = !ret.valid ? false : result.approved;\r\n\t        result[params.rule].approved = ret.valid;\r\n\t        // Add the error messages returned by the resluting object.\r\n\t        if (ret.hasOwnProperty('errors')) {\r\n\t        \tvar messages = this._formatMessages(ret.errors, params);\r\n\t            result.errors = result.errors.concat(messages);\r\n\t            result[params.rule].errors = messages;\r\n\t        }\r\n\t        // Merge any properties from the resulting object with the main result to be returned.\r\n\t        for (var prop in ret) {\r\n\t            if (ret.hasOwnProperty(prop) && !result.hasOwnProperty(prop)) {\r\n\t                result[params.rule][prop] = ret[prop];\r\n\t            }\r\n\t        }\r\n\t    } else if (typeof ret !== 'boolean') {\r\n\t        // We don't process if it's not a boolean or object.\r\n\t        throw 'approve.value(): ' + params.rule + ' returned an invalid value';\r\n\t    } else {\r\n\t        result.approved = !ret ? false : result.approved;\r\n\t        result[params.rule].approved = ret;\r\n\t    }\r\n\t    if (!result.approved) {\r\n\t    \tvar message = this._formatMessage(params);\r\n\t        result.errors.push(message);\r\n\t        result[params.rule].errors.push(message);\r\n\t    }\r\n\t    if (!ret.valid) {\r\n        \tresult.failed.push(params.rule);\r\n        }\r\n\t},\r\n\t/**\r\n\t * Helper method to loop over expected test parameters.\r\n\t */\r\n\t_eachExpected: function(params, fn) {\r\n\t    if (Array.isArray(params.test.expects)) {\r\n\t        var expectsLength = params.test.expects.length,\r\n\t            i = expectsLength;\r\n\t        // This test expects paramaters.\r\n\t        // Loop through the test's expected parameters and call the given function.\r\n\t        while (i--) {\r\n\t            fn(params.test.expects[i], expectsLength);\r\n\t        }\r\n\t    }\r\n\t},\r\n\t/**\r\n\t * Returns an object containing the arguments for a test's expected parameters.\r\n\t */\r\n\t_getArgs: function(params) {\r\n\t    var pars = {};\r\n\t    // Does the test for this rule expect any paramaters?\r\n\t    this._eachExpected(params, function(expects, expectsLength) {\r\n\t        // Check if the rule object has the required parameter.\r\n\t        if (params.constraint.hasOwnProperty(expects)) {\r\n\t            // Add the expected parameter value to the pars object.\r\n\t            pars[expects] = params.constraint[expects];\r\n\t        } else if (expectsLength <= 1 && (/^[A-Za-z0-9]+$/i.test(params.constraint) || toString.call(params.constraint) === '[object RegExp]')) {\r\n\t            // Set the parameter to the rule's value.\r\n\t            pars[expects] = params.constraint;\r\n\t        } else {\r\n\t            throw 'approve.value(): ' + params.rule + ' expects the ' + expects + ' parameter.';\r\n\t        }\r\n\t    });\r\n\r\n\t    // Does the rule have config?\r\n\t    if (params.constraint.hasOwnProperty('config')) {\r\n\t        // Add the config to the pars object.\r\n\t        pars.config = params.constraint.config;\r\n\t    }\r\n\t    // Return the parameters object\r\n\t    return pars;\r\n\t},\r\n\t/**\r\n\t * Returns an object containing placholder values to correctly format an error message.\r\n\t */\r\n\t_getFormat: function(params) {\r\n\t    var format = {};\r\n\t    // Does the test for the rule expect parameters?\r\n\t    this._eachExpected(params, function(expects) {\r\n\t        // Check if the rule object has the required parameter.\r\n\t        if (params.constraint.hasOwnProperty(expects)) {\r\n\t            // Add the expected parameter's format to the parameter value.\r\n\t            format[expects] = params.constraint[expects];\r\n\t        }\r\n\t        // Expected parameter not present, is the constraint formattable?\r\n\t        if (/^[A-Za-z0-9]+$/i.test(params.constraint)) {\r\n\t            format[expects] = params.constraint;\r\n\t        }\r\n\t    });\r\n\t    format.title = params.title;\r\n\t    // Return the formatted message.\r\n\t    return format;\r\n\t},\r\n\t/**\r\n\t * Returns an array of formatted error messages returned by tests that return objects instead of booleans.\r\n\t */\r\n\t_formatMessages: function(errors, params) {\r\n\t    var format = this._getFormat(params),\r\n\t        i = errors.length;\r\n\t    while (i--) {\r\n\t        errors[i] = this._format(errors[i], format);\r\n\t    }\r\n\t    return errors;\r\n\t},\r\n\t/**\r\n\t * Returns the correctly formatted message representing the current test's failure.\r\n\t */\r\n\t_formatMessage: function(params) {\r\n\t    var format = this._getFormat(params);\r\n\t    var message;\r\n\r\n\t    // Does the provided rule have a custom message?\r\n\t    if (params.constraint.hasOwnProperty('message')) {\r\n\t        // The rule has a custom message, return it.\r\n\t        message = params.constraint.message;\r\n\t        return this._format(message, format);\r\n\t    }\r\n\t    else {\r\n\t        // The rule does not have a custom message.\r\n\t        // Get the default message from the tests.\r\n\t        message = params.test.message();\r\n\t        return this._format(message, format);\r\n\t    }\r\n\t},\r\n\t/**\r\n\t * Executes the tests based on given rules to validate a given value.\r\n\t */\r\n\tvalue: function(value, rules) {\r\n\r\n\t    // If rules is not an object, we cannot continue.\r\n\t    if (typeof rules !== 'object') {\r\n\t        throw 'approve.value(value, rules): rules is not a valid object.';\r\n\t    }\r\n\t    // Return the result object.\r\n\t    return this._start(value, rules);\r\n\t},\r\n\t/**\r\n\t * Used to add custom tests.\r\n\t */\r\n\taddTest: function(obj, name) {\r\n\t    // If obj is not a valid object, we cannot continue.\r\n\t    if (typeof obj !== 'object') {\r\n\t        throw 'approve.addTest(obj, name): obj is not a valid object.';\r\n\t    }\r\n\t    try {\r\n\t        // Check if the test name already exists.\r\n\t        if (!this.tests.hasOwnProperty(name)) {\r\n\t            // The name does not exist, add it to the tests.\r\n\t            this.tests[name] = obj;\r\n\t        }\r\n\t    } catch (e) {\r\n\t        throw 'approve.addTest(): ' + e.message;\r\n\t    }\r\n\t},\r\n\tgetLocale: function() {\r\n\t\treturn i18n.getLocale();\r\n\t},\r\n\tsetLocale: function(newLocale) {\r\n\t\ti18n.setLocale(newLocale);\r\n\t}\r\n};\n\nreturn approve;\n\n})));\n"]}